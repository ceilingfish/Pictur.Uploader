//------------------------------------------------------------------------------
// <auto-generated>
//    This code was generated from a template.
//
//    Manual changes to this file may cause unexpected behavior in your application.
//    Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.ComponentModel;
using System.Data.EntityClient;
using System.Data.Objects;
using System.Data.Objects.DataClasses;
using System.Linq;
using System.Runtime.Serialization;
using System.Xml.Serialization;

[assembly: EdmSchemaAttribute()]
#region EDM Relationship Metadata

[assembly: EdmRelationshipAttribute("Ceilingfish.Pictur.Core.Persistence", "ManagedDirectoryFile", "ManagedDirectory", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(Ceilingfish.Pictur.Core.ManagedDirectory), "File", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(Ceilingfish.Pictur.Core.File))]

#endregion

namespace Ceilingfish.Pictur.Core
{
    #region Contexts
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    public partial class PersistenceContainer : ObjectContext
    {
        #region Constructors
    
        /// <summary>
        /// Initializes a new PersistenceContainer object using the connection string found in the 'PersistenceContainer' section of the application configuration file.
        /// </summary>
        public PersistenceContainer() : base("name=PersistenceContainer", "PersistenceContainer")
        {
            this.ContextOptions.LazyLoadingEnabled = true;
            OnContextCreated();
        }
    
        /// <summary>
        /// Initialize a new PersistenceContainer object.
        /// </summary>
        public PersistenceContainer(string connectionString) : base(connectionString, "PersistenceContainer")
        {
            this.ContextOptions.LazyLoadingEnabled = true;
            OnContextCreated();
        }
    
        /// <summary>
        /// Initialize a new PersistenceContainer object.
        /// </summary>
        public PersistenceContainer(EntityConnection connection) : base(connection, "PersistenceContainer")
        {
            this.ContextOptions.LazyLoadingEnabled = true;
            OnContextCreated();
        }
    
        #endregion
    
        #region Partial Methods
    
        partial void OnContextCreated();
    
        #endregion
    
        #region ObjectSet Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<File> Files
        {
            get
            {
                if ((_Files == null))
                {
                    _Files = base.CreateObjectSet<File>("Files");
                }
                return _Files;
            }
        }
        private ObjectSet<File> _Files;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<ManagedDirectory> ManagedDirectories
        {
            get
            {
                if ((_ManagedDirectories == null))
                {
                    _ManagedDirectories = base.CreateObjectSet<ManagedDirectory>("ManagedDirectories");
                }
                return _ManagedDirectories;
            }
        }
        private ObjectSet<ManagedDirectory> _ManagedDirectories;

        #endregion

        #region AddTo Methods
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Files EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToFiles(File file)
        {
            base.AddObject("Files", file);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the ManagedDirectories EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToManagedDirectories(ManagedDirectory managedDirectory)
        {
            base.AddObject("ManagedDirectories", managedDirectory);
        }

        #endregion

    }

    #endregion

    #region Entities
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="Ceilingfish.Pictur.Core.Persistence", Name="File")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class File : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new File object.
        /// </summary>
        /// <param name="id">Initial value of the Id property.</param>
        /// <param name="path">Initial value of the Path property.</param>
        /// <param name="isIgnored">Initial value of the IsIgnored property.</param>
        public static File CreateFile(global::System.Int32 id, global::System.String path, global::System.Boolean isIgnored)
        {
            File file = new File();
            file.Id = id;
            file.Path = path;
            file.IsIgnored = isIgnored;
            return file;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Id
        {
            get
            {
                return _Id;
            }
            set
            {
                if (_Id != value)
                {
                    OnIdChanging(value);
                    ReportPropertyChanging("Id");
                    _Id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("Id");
                    OnIdChanged();
                }
            }
        }
        private global::System.Int32 _Id;
        partial void OnIdChanging(global::System.Int32 value);
        partial void OnIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Path
        {
            get
            {
                return _Path;
            }
            set
            {
                OnPathChanging(value);
                ReportPropertyChanging("Path");
                _Path = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Path");
                OnPathChanged();
            }
        }
        private global::System.String _Path;
        partial void OnPathChanging(global::System.String value);
        partial void OnPathChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Boolean IsIgnored
        {
            get
            {
                return _IsIgnored;
            }
            set
            {
                OnIsIgnoredChanging(value);
                ReportPropertyChanging("IsIgnored");
                _IsIgnored = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("IsIgnored");
                OnIsIgnoredChanged();
            }
        }
        private global::System.Boolean _IsIgnored;
        partial void OnIsIgnoredChanging(global::System.Boolean value);
        partial void OnIsIgnoredChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Ceilingfish.Pictur.Core.Persistence", "ManagedDirectoryFile", "ManagedDirectory")]
        public ManagedDirectory ManagedDirectoryId
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<ManagedDirectory>("Ceilingfish.Pictur.Core.Persistence.ManagedDirectoryFile", "ManagedDirectory").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<ManagedDirectory>("Ceilingfish.Pictur.Core.Persistence.ManagedDirectoryFile", "ManagedDirectory").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<ManagedDirectory> ManagedDirectoryIdReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<ManagedDirectory>("Ceilingfish.Pictur.Core.Persistence.ManagedDirectoryFile", "ManagedDirectory");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<ManagedDirectory>("Ceilingfish.Pictur.Core.Persistence.ManagedDirectoryFile", "ManagedDirectory", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="Ceilingfish.Pictur.Core.Persistence", Name="ManagedDirectory")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class ManagedDirectory : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new ManagedDirectory object.
        /// </summary>
        /// <param name="id">Initial value of the Id property.</param>
        /// <param name="path">Initial value of the Path property.</param>
        public static ManagedDirectory CreateManagedDirectory(global::System.Int32 id, global::System.String path)
        {
            ManagedDirectory managedDirectory = new ManagedDirectory();
            managedDirectory.Id = id;
            managedDirectory.Path = path;
            return managedDirectory;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Id
        {
            get
            {
                return _Id;
            }
            set
            {
                if (_Id != value)
                {
                    OnIdChanging(value);
                    ReportPropertyChanging("Id");
                    _Id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("Id");
                    OnIdChanged();
                }
            }
        }
        private global::System.Int32 _Id;
        partial void OnIdChanging(global::System.Int32 value);
        partial void OnIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Path
        {
            get
            {
                return _Path;
            }
            set
            {
                OnPathChanging(value);
                ReportPropertyChanging("Path");
                _Path = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Path");
                OnPathChanged();
            }
        }
        private global::System.String _Path;
        partial void OnPathChanging(global::System.String value);
        partial void OnPathChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Ceilingfish.Pictur.Core.Persistence", "ManagedDirectoryFile", "File")]
        public EntityCollection<File> Files
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<File>("Ceilingfish.Pictur.Core.Persistence.ManagedDirectoryFile", "File");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<File>("Ceilingfish.Pictur.Core.Persistence.ManagedDirectoryFile", "File", value);
                }
            }
        }

        #endregion

    }

    #endregion

    
}
